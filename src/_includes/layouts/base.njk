<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <title>{{ title | default(site.name) }} • {{ site.name }}</title>
  <meta name="description" content="{{ description or site.tagline }}">
  <meta name="theme-color" content="{{ site.themeColor }}">
  <meta property="og:title" content="{{ title | default(site.name) }} • {{ site.name }}">
  <meta property="og:description" content="{{ description or site.tagline }}">
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://{{ site.domain }}">
  <meta property="og:image" content="/preview/hero-desktop.png">
  <meta name="twitter:card" content="summary_large_image">

  <!-- Styles -->
  <link rel="preload" href="/assets/fonts/Eurostile.woff2" as="font" type="font/woff2" crossorigin>
  <link rel="preload" href="/assets/css/style.css" as="style">
  <link rel="stylesheet" href="/assets/css/style.css">

  <!-- PWA -->
  <link rel="manifest" href="/manifest.webmanifest">
  <link rel="icon" href="/assets/img/favicon.ico">

  {% set cspDirectives = [
    "default-src 'self'",
    "connect-src 'self' https://vwrqapholagchwzkkqpt.supabase.co https://vwrqapholagchwzkkqpt.functions.supabase.co https://formspree.io",
    "font-src 'self'",
    "form-action 'self' https://formspree.io",
    "frame-ancestors 'none'",
    "img-src 'self' data:",
    "object-src 'none'",
    "script-src 'self' 'unsafe-inline' https://esm.sh https://cdn.jsdelivr.net https://static.cloudflareinsights.com",
    "style-src 'self' 'unsafe-inline'",
    "base-uri 'self'",
    "upgrade-insecure-requests"
  ] %}
  {% if site.cspReportUri %}
    {% set _ = cspDirectives.push("report-uri " ~ site.cspReportUri) %}
  {% endif %}
  {% if site.cspReportGroup %}
    {% set _ = cspDirectives.push("report-to " ~ site.cspReportGroup) %}
  {% endif %}
  <!-- Content Security Policy -->
  <meta http-equiv="Content-Security-Policy" content="{{ cspDirectives | join('; ') }}">

  <!-- Hide auth-only by default; JS toggles once we detect session -->
  <style>
  .auth-only{display:none}
  .member-only{display:none}
  .nav__list{list-style:none;margin:0;padding:0}
  </style>

<script>
  // Expose Supabase settings (from site.json) globally
  window.SUPABASE_URL = "{{ site.supabaseUrl }}";
  window.SUPABASE_ANON = "{{ site.supabaseAnon }}";
  window.SUPABASE_URL_KEY = window.SUPABASE_URL;
  window.SUPABASE_ANON_KEY = window.SUPABASE_ANON;
</script>

</head>
<body{% if site.supabaseUrl %} data-supabase-url="{{ site.supabaseUrl }}"{% endif %}{% if site.supabaseAnon %} data-supabase-anon="{{ site.supabaseAnon }}"{% endif %}>
  <a href="#main" class="sr-only">Skip to main content</a>

  {% include "partials/header.njk" %}

  <main id="main">
    {{ content | safe }}
  </main>

  {% include "partials/footer.njk" %}

  <!-- Minimal inline toggle for auth/guest links -->
  <script>
  (function(){
    try{
      var key = Object.keys(localStorage).find(function(k){
        return k.startsWith('sb-') && k.endsWith('-auth-token');
      }) || 'sb-vwrqapholagchwzkkqpt-auth-token';  // your project ref fallback
      var raw = localStorage.getItem(key);
      var loggedIn = false;
      if (raw){
        try{
          var obj = JSON.parse(raw);
          loggedIn = !!(obj && ((obj.currentSession && obj.currentSession.access_token) || obj.access_token));
        }catch(e){ loggedIn = raw.indexOf('access_token') !== -1; }
      }
      var show = function(sel,on){ document.querySelectorAll(sel).forEach(el=> el.style.display = on ? '' : 'none'); };
      show('.auth-only', loggedIn);
      show('.guest-only', !loggedIn);
    }catch(e){}
  })();
  </script>
  <script>
(async function(){
  try {
    var key = Object.keys(localStorage).find(k => k.startsWith('sb-') && k.endsWith('-auth-token'))
              || 'sb-vwrqapholagchwzkkqpt-auth-token';
    var raw = localStorage.getItem(key);
    var loggedIn = false;
    if (raw) {
      try {
        var obj = JSON.parse(raw);
        loggedIn = !!(obj && ((obj.currentSession && obj.currentSession.access_token) || obj.access_token));
      } catch (e) {
        loggedIn = raw.indexOf('access_token') !== -1;
      }
    }

    var show = (sel, on) => document.querySelectorAll(sel).forEach(el => el.style.display = on ? '' : 'none');

    if (!loggedIn) {
      show('.guest-only', true);
      show('.auth-only', false);
      show('.member-only', false);
      return;
    }

    // Logged in
    show('.guest-only', false);
    show('.auth-only', true);

    var dataset = (document.body && document.body.dataset) || {};
    var supabaseUrl = window.SUPABASE_URL || dataset.supabaseUrl || (typeof SUPABASE_URL_KEY !== 'undefined' ? SUPABASE_URL_KEY : undefined);
    var supabaseAnon = window.SUPABASE_ANON || dataset.supabaseAnon || (typeof SUPABASE_ANON_KEY !== 'undefined' ? SUPABASE_ANON_KEY : undefined);

    if (supabaseUrl && supabaseAnon) {
      const { createClient } = await import('https://esm.sh/@supabase/supabase-js@2');
      const supabase = createClient(supabaseUrl, supabaseAnon);
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) { show('.member-only', false); return; }

      const { data: profile, error } = await supabase
        .from('profiles')
        .select('is_member')
        .eq('id', user.id)
        .single();

      const isMember = !error && profile && profile.is_member === true;
      show('.member-only', !!isMember);
    }
  } catch (e) {
    console.warn('Nav auth/member toggle error:', e);
  }
})();
</script>
  <!-- Your main JS once (defer) -->
  <script src="/assets/js/main.js" defer></script>
</body>
</html>
